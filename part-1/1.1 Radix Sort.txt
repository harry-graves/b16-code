Harry Graves
Problem Sheet 3B16C
1 Linear-Time Sorting
1.1 Radix Sort

Sorting digit by digit can be achieved using radix sort, 
in this case using a base 2 implementation.

Precondition: A is a sequence of integers
Postcondition: The output is the same integers sorted in non-decreasing order.

First, the integers are sorted in order of their least significant bit, i.e. c_0.
This is achieved using CountingSort, which has time complexity O(n).
If two integers have the same value for this bit, they remain in the same relative
order they were originally in.

Then, the integers are sorted in order of their second least significant bit, i.e. c_1.
If two integers have the same value for this bit, they remain in the same relative order
of the previous step.

This process is repeated for each bit in order of significance up to and including
the most significant bit, importantly each time remaining in the order of the previous step.

Once the most significant bit has been sorted, the sequence will now be in ascending order.

Since the time complexity of CountingSort is O(n), and CountingSort is called on each of the
k bits from least to most significant, overall time complexity is O(kn).